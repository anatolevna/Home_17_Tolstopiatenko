/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:0.67em 0}figcaption,figure{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}main{display:block}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}input{overflow:visible}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}details{display:block}summary{display:list-item}menu{display:block}canvas{display:inline-block}template{display:none}[hidden]{display:none}@font-face{font-family:'HelveticaNeue';src:url("../../fonts/HelveticaNeue/HelveticaNeue.eot?#iefix") format("embedded-opentype"),url("../../fonts/HelveticaNeue/HelveticaNeue.woff") format("woff"),url("../../fonts/HelveticaNeue/HelveticaNeue.ttf") format("truetype"),url("../../fonts/HelveticaNeue/HelveticaNeue.svg#HelveticaNeue") format("svg");font-weight:normal;font-style:normal}@font-face{font-family:'Raleway-SemiBold';src:url("../../fonts/Raleway-SemiBold/Raleway-SemiBold.eot") format("embedded-opentype");src:url(data:application/x-font-woff;charset=utf-8;base64) format("woff"),url("../../fonts/Raleway-SemiBold/Raleway-SemiBold.ttf") format("truetype"),url("../../fonts/Raleway-SemiBold/Raleway-SemiBold.svg#Raleway-SemiBold") format("svg");font-weight:normal;font-style:normal}.main-background{background-color:#c2c7cc;max-height:600px;background-size:cover;margin:0 auto;overflow:hidden;border-top:5px solid #2ecc71;background-repeat:no-repeat;-webkit-background-size:cover;-moz-background-size:cover;-o-background-size:cover}.notify{float:left;padding-top:150px;width:40%;margin:auto;padding-left:122px}.notify .descr{max-width:453px;color:#fff;font:500 24px/1 "HelveticaNeue",Helvetica,Arial,sans-serif;line-height:36px;padding-bottom:22px}.hand{float:right;padding-top:95px;width:40%;margin:auto;padding-left:30px}.nav-header{padding:0;margin:0}.nav-header a{padding:18px 18px;background-color:#000000;border-radius:100px;opacity:0.5}.nav-header a:hover{background-color:#2ecc71;border-radius:100px;opacity:0.5}.nav-header img{vertical-align:middle;width:21px;height:26px}.nav-header li:hover>ul{display:block}.nav-header ul{display:none}.nav-header li{display:inline-block;margin-right:10px}.clearfix:after{content:'';clear:both;display:block}.background-editable-flat-reach{overflow:hidden}.gear-star-earth{display:flex;align-items:flex-start;justify-content:space-between;list-style:none;padding-top:40px;padding-left:0;text-align:center;text-decoration:none}.gear-star-earth .card{text-align:center;max-width:320px;padding:0}.gear-star-earth .card img{line-height:80px;padding:25px 25px;background-color:#2ecc71;border-radius:53px;margin:auto}.gear-star-earth .card a{text-decoration:none}.gear-star-earth .card h3{color:#222222;font:"Raleway - Semi Bold",sans-serif;font-size:22px;font-weight:400;line-height:18px;text-align:center;vertical-align:middle;padding-top:20px;text-decoration:none}.gear-star-earth .card p{color:#848484;font:400 16px/1 "HelveticaNeue",Helvetica,Arial,sans-serif;line-height:26px;text-align:center;vertical-align:middle;padding-top:10px;padding-bottom:20px}.box-img img:hover{background-color:#2ecc71;border-radius:53px}.box-img a:hover{background-color:#2ecc71;border-radius:53px;opacity:0.5}.background-send{background-color:#e3e3e3;min-height:427px;background-size:cover;margin:0 auto;overflow:hidden}.notify-adn-upd{float:left;width:44%;margin:auto;padding-left:20px;padding-top:45px}.notify-adn-upd h2{color:#222;font:"Raleway - Semi Bold",sans-serif;font-size:22px;font-weight:400;line-height:18px}.notify-adn-upd p{color:#848484;font:400 16px/1 "HelveticaNeue",Helvetica,Arial,sans-serif;line-height:26px}.form{display:flex;height:56px;max-width:587px}input{line-height:54px;padding:0 30px;width:60%;border-radius:15px 0 0 15px}button{padding:0 20px;height:56px;width:40%;color:#fff;font-family:'Raleway', sans-serif;font-size:22px;font-weight:700;line-height:18px;background-color:#2ecc71;border-radius:0 15px 15px 0}.video{padding-top:60px}.videoWrapper{float:right;width:42%;margin:auto;overflow:hidden;padding:2px 2px;border-radius:7px}.videoWrapper iframe{width:100%;min-height:307px;display:block}.background-people{background-color:#fff;min-height:464px}.about-people blockquote,.about-people p,.people-about p,.people-about h3{max-width:825px;text-align:center;margin:auto}.about-people blockquote{color:#848484;font:400 18px/1 "HelveticaNeue",Helvetica,Arial,sans-serif;font-style:italic;line-height:30px;padding-top:52px}.about-people p{color:#2e2e2e;font-family:'Raleway', sans-serif;font-size:18px;font-weight:700;line-height:20px;padding-bottom:28px;padding-top:22px}.people-about p{color:#848484;font:400 16px/1 "HelveticaNeue",Helvetica,Arial,sans-serif;line-height:26px;padding-top:19px;padding-bottom:22px}.people-about h3{color:#000;font:"Raleway - Semi Bold",sans-serif;font-size:24px;font-weight:400;line-height:24px;padding-top:55px}.container-peoples{padding:9px 8px 0 0}.peoples{position:relative;overflow:hidden;display:flex;max-width:1146px;width:100%;align-items:center;justify-content:space-between;list-style:none;margin:0 auto;padding:0}.peoples:after{content:'';position:absolute;top:0;bottom:0;width:1px;z-index:5}.peoples:before{left:-1px;box-shadow:2px 0 26px 18px #fff}.peoples:after{right:-1px;box-shadow:-2px 0 26px 18px #fff}.container-peoples .people{display:block}.people a{position:relative;display:block;transition:.35s}.people a:before{content:"";position:absolute;left:0;right:0;top:0;bottom:0;z-index:1;transition:.3s;opacity:0;background:#2ecc71}.people a:hover:before,.people a:focus:before{opacity:.6}.container-peoples .people img{width:50px;vertical-align:middle}.social{margin:auto;max-width:350px;width:100%}.social img{vertical-align:middle}.social li:hover>ul{display:block}.social ul{display:none}.social li{display:inline;margin-right:10px}.twit-item,.face-item,.pin-item,.plus-item,.in-item,.youtube-item{background-color:#c5c5c5;border-radius:50%}.twit-item{padding:10px 12px}.face-item{padding:10px 15px}.pin-item,.plus-item{padding:10px}.in-item{padding:10px 12px}.youtube-item{padding:10px 11px}.twit-item:hover,.face-item:hover,.pin-item:hover,.plus-item:hover,.in-item:hover,.youtube-item:hover{background-color:#2ecc71;border-radius:50%}.twit-item:hover{padding:10px 12px}.face-item:hover{padding:10px 15px}.pin-item:hover,.plus-item:hover{padding:10px}.in-item:hover{padding:10px 12px}.youtube-item:hover{padding:10px 11px}.social-menu{background-color:#e3e3e3;min-height:130px;padding-top:20px;padding-bottom:20px}.nav-main{display:flex;width:100%;padding-top:60px;padding-bottom:54px;align-items:center;justify-content:space-around;list-style:none;margin:auto}.nav-main a{text-decoration:none;color:#848484;font:400 16px/1 "HelveticaNeue",Helvetica,Arial,sans-serif;line-height:26px}.nav-main a:hover{background-color:#2ecc71;border-radius:53px;opacity:0.5}.title{text-decoration:none;color:#848484;font:400 16px/1 "HelveticaNeue",Helvetica,Arial,sans-serif;line-height:26px;text-align:center}.img-music{vertical-align:center;margin:auto;max-width:350px;width:100%}*{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}.container{width:100%;margin:0 auto;padding:0}body.custom-background{background-color:#bdd96e}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
